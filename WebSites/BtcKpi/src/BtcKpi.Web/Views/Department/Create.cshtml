@model BtcKpi.Web.ViewModels.DepartmentViewModel
@using BtcKpi.Model
@using BtcKpi.Service.Common
@{
    ViewBag.Title = "KPIs phòng ban/ bộ phận";
    if(Model.Upf.ID == null || Model.Upf.ID == 0)
    {
        ViewBag.SubTitle = "Thêm mới KPIs";
    } else if(Model.Upf.ID != 0) {
        ViewBag.SubTitle = "Cập nhật KPIs";
    }
    if (Model.isApprove == true)
    {
        ViewBag.SubTitle = "Phê duyệt KPIs";
    }
    if (Model.isBODApprove == true)
    {
        ViewBag.SubTitle = "Phê duyệt KPIs";
    }
    if (Model.isComment == true)
    {
        ViewBag.SubTitle = "Nhận xét KPIs";
    }
}
@section Menu {
    @Scripts.Render("~/Scripts/Tables/Data/menu")
    @Scripts.Render("~/Scripts/Elements/Modals/menu")
}

@Styles.Render("~/BitexcoThemes/plugins/datatables/css")
@Styles.Render("~/Styles/Elements/Modals")
@Styles.Render("~/BitexcoThemes/plugins/datepicker/css")

@Html.Partial("_AddNameDetailModal")
@Html.Partial("_AddJobObjectModal")
@Html.Partial("_AddPersRewPropModal")
<div id="error-block" class="callout callout-danger" style="margin-bottom: 0 !important;">
    <h4><i class="fa fa-info"></i> Lỗi:</h4>
    <label id="ErrorMessage">@Html.DisplayFor(model => model.ErrorMessage)</label>
</div>
@using (Html.BeginForm())
{
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => Model.Upf.ID, new { @id = "upfHiddenId" })
        @Html.HiddenFor(model => Model.FirstLoad)
        @Html.HiddenFor(model => Model.isApprove)
        @Html.HiddenFor(model => Model.isBODApprove)
        @Html.HiddenFor(model => Model.isComment)
        <div class="box box-primary" id="info-block">
            <div class="box-body box-profile">
                <h3 class="profile-username text-center">@Html.DisplayFor(model => model.UserInfo.FullName)</h3>
                <p class="text-muted text-center">@Html.DisplayFor(model => model.UserInfo.AdministratorshipName)</p>
                <ul class="list-group list-group-unbordered">
                    <li class="list-group-item">
                        <div class="col-md-6 text-center">
                            <b>Phòng / bộ phận : </b> <a>@Html.DisplayFor(model => model.UserInfo.DepartmentName)</a>
                        </div>
                        <div class="col-md-6 text-center">
                            <b>Người quản lý/ Thực hiện báo cáo : </b> <a>@Html.DisplayFor(model => model.ManagerInfo.FullName) - @Html.DisplayFor(model => model.ManagerInfo.AdministratorshipName)</a>
                        </div>
                        <br />
                    </li>
                    <li class="list-group-item align-middle">
                        <div class="col-md-3">
                            <b>Người duyệt : </b>
                            @Html.DropDownListFor(x => x.Upf.ApproveBy, Model.Approves, "--- Chọn ---")
                        </div>
                        <div class="col-md-3">
                            <b>BOD duyệt : </b>
                            @Html.DropDownListFor(x => x.Upf.BodApproved, Model.BODApproves, "--- Chọn ---")
                        </div>
                        <div class="col-md-2">
                            <b>Loại : </b>
                            @Html.DropDownListFor(x => x.Upf.ScheduleType, Model.ScheduleTypes, "--- Chọn ---", new { @onchange = "scheduleChange(this.value)" })
                        </div>
                        <div class="col-md-2">
                            <b>Năm : </b>
                            @Html.DropDownListFor(x => x.Upf.Year, Model.Years, "--- Chọn ---")
                        </div>
                        <div class="col-md-2" id="dUpf_ScheduleID">
                            <b>Kỳ : </b>
                            @Html.DropDownListFor(x => x.Upf.ScheduleID, Model.DepartSchedules, "--- Chọn ---")
                        </div>
                        <br />
                    </li>
                    @if (@Model.isApprove == false && @Model.isComment == false)
                    {
                        <div class="col-md-12 text-right" style="margin-top: 10px;">
                            <button id="btnStart" type="button" class="btn btn-info btn-sm" title="Bắt đầu">Bắt đầu</button>
                            <button id="btnReset" type="button" class="btn btn-danger btn-sm" title="Hủy">Hủy</button>
                        </div>
                    }
                </ul>
            </div>
        </div>
        <div class="row" id="kpi-block">
            <div class="col-md-12">
                <div class="nav-tabs-custom">
                    <div class="tab-content">
                        <div class="box box-boder-top-1">
                            <div class="box-header with-border">
                                <h4><b>Mục tiêu công việc</b></h4>
                                <div class="box-tools pull-right">
                                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="box-body no-padding">
                                <table id="depart-job-object" class="table table-bordered table-hover">
                                    <thead>
                                        <tr class="bg-primary">
                                            <th class="text-center" style="width: 2%;">STT</th>
                                            <th class="text-center" style="width: 22%;">KPIs/ Mục tiêu</th>
                                            <th class="text-center" style="width: 10%;">Thời gian dự kiến hoàn thành</th>
                                            <th class="text-center" style="width: 15%;">Số kế hoạch/ Yêu cầu cụ thể</th>
                                            <th class="text-center" style="width: 15%;">Kết quả thực hiện</th>
                                            <th class="text-center" style="width: 7%;">Tỷ trọng (%)</th>
                                            <th class="text-center" style="width: 6%;">Điểm tự đánh giá</th>
                                            <th class="text-center" style="width: 7%;">QL đánh giá</th>
                                            <th class="text-center" style="width: 7%;">BOD đánh giá</th>
                                            @if (@Model.isBODApprove == false && @Model.isApprove == false && @Model.isComment == false)
                                            {
                                                <th style="width: 9%;" class="text-center">
                                                    <button type="button" class="btn btn-success btn-circle job-obj-add" data-toggle="modal" data-target="#add-job-detail-modal" title="Thêm mới"><i class="fa fa-plus-circle"></i></button>
                                                </th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.NameDetails.Count; i++)
                                        {
                                            <tr style="background-color: aliceblue">
                                                <td hidden="true">
                                                    @Model.NameDetails[i].WorkCompleteID @Html.HiddenFor(x => Model.NameDetails[i].WorkCompleteID)
                                                </td>
                                                <td class="text-center">
                                                    @BtcHelper.ToRoman(Model.NameDetails[i].Order) @Html.HiddenFor(x => Model.NameDetails[i].Order)
                                                </td>
                                                <td colspan="4">
                                                    @Model.NameDetails[i].NameKPI @Html.HiddenFor(x => Model.NameDetails[i].NameKPI)
                                                </td>
                                                <td>
                                                    @*@Model.CompleteWorks[i].Target @Html.HiddenFor(x => Model.CompleteWorks[i].Target)*@
                                                </td>
                                                <td>
                                                    @*@Model.CompleteWorks[i].Weight @Html.HiddenFor(x => Model.CompleteWorks[i].Weight)*@
                                                </td>
                                                <td></td>
                                                <td></td>
                                                @if (@Model.isBODApprove == false && @Model.isApprove == false && @Model.isComment == false)
                                                {
                                                    <td class="text-center">
                                                        @*<button type="button" class="btn btn-sm btn-success job-obj-add" data-toggle="modal" data-target="#add-job-detail-modal" data-id="@Model.NameDetails[i].Order" title="Thêm mới"><i class="fa fa-plus-circle"></i></button>
                                                        <button type="button" class="btn btn-sm btn-social-icon btn-twitter name-detail-edit" data-toggle="modal" data-target="#add-detail-modal" data-id="@Model.NameDetails[i].Order" title="Cập nhật"><i class="fa fa-edit"></i></button>*@
                                                    </td>
                                                }
                                            </tr>
                                            if (Model.NameDetails[i].JobDetails != null)
                                            {
                                                foreach (UpfJobDetail jobDetail in Model.NameDetails[i].JobDetails)
                                                {
                                                    <tr>
                                                        <td hidden="true">
                                                            @jobDetail.NameDetailID @Html.HiddenFor(x => jobDetail.NameDetailID)
                                                        </td>
                                                        <td hidden="true">
                                                            @jobDetail.NameKPIEdit @Html.HiddenFor(x => jobDetail.NameKPIEdit)
                                                        </td>
                                                        <td class="text-center">
                                                            @jobDetail.Order @Html.HiddenFor(x => jobDetail.ID)
                                                        </td>
                                                        <td>
                                                            @jobDetail.JobName @Html.HiddenFor(x => jobDetail.JobName)
                                                        </td>
                                                        <td>
                                                            @jobDetail.ScheduleTimeString @Html.HiddenFor(x => jobDetail.ScheduledTime)
                                                        </td>
                                                        <td>
                                                            @jobDetail.NumberPlan @Html.HiddenFor(x => jobDetail.NumberPlan)
                                                        </td>
                                                        <td>
                                                            @jobDetail.PerformResults @Html.HiddenFor(x => jobDetail.PerformResults)
                                                        </td>
                                                        <td>
                                                            @jobDetail.Weight @Html.HiddenFor(x => jobDetail.Weight)
                                                        </td>
                                                        <td>
                                                            @jobDetail.Point.ToString() @Html.HiddenFor(x => jobDetail.Point)
                                                        </td>
                                                        <td>
                                                            @if (@Model.isApprove == true)
                                                            {
                                                                <input id="managePointId" max="5" min="0" name="jobDetail.ManagePoint" onchange="onUpdateManagePoint(this.value, @jobDetail.ID)" step="0.01" type="number" value="@jobDetail.ManagePoint.ToString().Replace(",", ".")">
                                                            }
                                                            @if (jobDetail.ManagePoint != null && @Model.isApprove == false)
                                                            {
                                                                @jobDetail.ManagePoint.ToString() @Html.HiddenFor(x => jobDetail.ManagePoint)
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (@Model.Upf.StatusID == 2 && @Model.isBODApprove == true)
                                                            {
                                                                <input id="bodPointId" max="5" min="0" name="jobDetail.BodPoint" onchange="onUpdateBODPoint(this.value, @jobDetail.ID)" step="0.01" type="number" value="@jobDetail.BodPoint.ToString().Replace(",", ".")">
                                                            }
                                                            @if (jobDetail.BodPoint != null && @Model.isBODApprove == false)
                                                            {
                                                                @jobDetail.BodPoint.ToString() @Html.HiddenFor(x => jobDetail.BodPoint)
                                                            }
                                                        </td>
                                                        @if (@Model.isBODApprove == false && @Model.isApprove == false && @Model.isComment == false)
                                                        {
                                                            <td class="text-center">
                                                                <button type="button" class="btn btn-sm btn-social-icon btn-twitter job-obj-edit" data-id="@jobDetail.Order" title="Cập nhật"><i class="fa fa-edit"></i></button>
                                                                <button type="button" class="btn btn-sm btn-social-icon btn-google job-obj-delete" data-id="@jobDetail.Order" title="Xóa"><i class="fa fa-trash"></i></button>
                                                            </td>
                                                        }
                                                    </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <th colspan="5">Tổng điểm đạt được</th>
                                            <th>@Html.DisplayFor(model => model.Upf.WeightTotal) @Html.HiddenFor(model => model.Upf.WeightTotal, new { @id = "weightTotalID" })</th>
                                            <th>@Html.DisplayFor(model => model.Upf.TotalPoint) @Html.HiddenFor(model => model.Upf.TotalPoint)</th>
                                            <th>@Html.DisplayFor(model => model.Upf.TotalManagePoint) @Html.HiddenFor(model => model.Upf.TotalManagePoint)</th>
                                            <th>@Html.DisplayFor(model => model.Upf.TotalBODPoint) @Html.HiddenFor(model => model.Upf.TotalBODPoint)</th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                        <div class="box box-boder-top-1">
                            <div class="box-header with-border">
                                <h4><b>Đánh giá chung</b></h4>
                            </div>
                            <div class="box-body">
                                <div class="form-group">
                                    @Html.LabelFor(x => x.Upf.OutsAchiev, "Thành tích nổi bật của bộ phận:", new { @class = "col-md-4" })
                                    @Html.TextAreaFor(x => x.Upf.OutsAchiev, new { @onblur = "onChangeOutsAchiev(this.value)", @class = "col-md-8", @id = "outsAchievID" })
                                </div>
                            </div>
                            <div class="box-body">
                                <div class="form-group">
                                    @Html.LabelFor(x => x.Upf.SelfRating, "Tự đánh giá xếp loại Bộ phận:", new { @class = "col-md-4" })
                                    @Html.DropDownListFor(x => x.Upf.SelfRating, Model.UpfRates, "--- Chọn ---", new { @onchange = "onChangeSelfRating(this.value)", @class = "col-md-4", @id = "selfRatingID" })
                                </div>
                            </div>
                            <div class="box-body">
                                <b class="col-md-4">Đề xuất cá nhân được vinh danh:</b>
                                <table id="person-reward-proposals" class="table table-bordered table-hover">
                                    <thead>
                                        <tr class="bg-primary">
                                            <th class="text-center" style="width: 2%;">STT</th>
                                            <th class="text-center" style="width: 26%;">Tên nhân viên</th>
                                            <th class="text-center" style="width: 63%;">Thành tích nổi bật</th>
                                            @if (@Model.isBODApprove == false && @Model.isApprove == false && @Model.isComment == false)
                                            {
                                                <th style="width: 9%;" class="text-center">
                                                    <button type="button" class="btn btn-success btn-circle pers-rew-prop-add" data-toggle="modal" data-target="#add-persrewpro-modal" title="Thêm mới"><i class="fa fa-plus-circle"></i></button>
                                                </th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.PersRewProposals.Count; i++)
                                        {
                                            <tr>
                                                <td class="text-center">
                                                    @Model.PersRewProposals[i].Order @Html.HiddenFor(x => Model.PersRewProposals[i].ID)  @Html.HiddenFor(x => Model.PersRewProposals[i].Order)
                                                </td>
                                                <td>
                                                    @Model.PersRewProposals[i].EmployeeName @Html.HiddenFor(x => Model.PersRewProposals[i].EmployeeName)
                                                </td>
                                                <td>
                                                    @Model.PersRewProposals[i].PersOutsAchiev @Html.HiddenFor(x => Model.PersRewProposals[i].PersOutsAchiev)
                                                </td>
                                                @if (@Model.isBODApprove == false && @Model.isApprove == false && @Model.isComment == false)
                                                {
                                                    <td>
                                                        <button type="button" class="btn btn-sm btn-social-icon btn-twitter pers-raw-prop-edit" data-id="@Model.PersRewProposals[i].Order" title="Cập nhật"><i class="fa fa-edit"></i></button>
                                                        <button type="button" class="btn btn-sm btn-social-icon btn-google pers-raw-prop-delete" data-id="@Model.PersRewProposals[i].Order" title="Xóa"><i class="fa fa-trash"></i></button>
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        @if (@Model.UpfComments != null)
                        {
                            <div id="manageComment" class="box box-boder-top-1">
                                <div class="box-header with-border">
                                    <h4><b>Nhận xét của cấp quản lý</b></h4>
                                </div>
                                <div class="box-body">
                                    <table id="person-reward-proposals" class="table table-bordered table-hover">
                                        <thead>
                                            <tr class="bg-primary">
                                                <th class="text-center" style="width: 5%;">STT</th>
                                                <th class="text-center" style="width: 20%;">Người thực hiện</th>
                                                <th class="text-center" style="width: 20%;">Chức vụ - Phòng ban</th>
                                                <th class="text-center" style="width: 40%;">Nhận xét</th>
                                                <th class="text-center" style="width: 15%;">Ngày thực hiện</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @for (int i = 0; i < Model.UpfComments.Count; i++)
                                            {
                                                <tr>
                                                    <td class="text-center">
                                                        @Model.UpfComments[i].Order @Html.HiddenFor(x => Model.UpfComments[i].ID)
                                                    </td>
                                                    <td>
                                                        @Model.UpfComments[i].UserName @Html.HiddenFor(x => Model.UpfComments[i].UserName)
                                                    </td>
                                                    <td>
                                                        @Model.UpfComments[i].AdminDepartName @Html.HiddenFor(x => Model.UpfComments[i].AdminDepartName)
                                                    </td>
                                                    <td>
                                                        @Model.UpfComments[i].Comment @Html.HiddenFor(x => Model.UpfComments[i].Comment)
                                                    </td>
                                                    <td>
                                                        @Model.UpfComments[i].CreatedDateString @Html.HiddenFor(x => Model.UpfComments[i].CreatedDate)
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                    <br />
                                    <div class="form-group">
                                        <label class="col-md-4">Nhận xét : </label>
                                        @Html.TextAreaFor(model => model.UpfComment.Comment, new { @class = "col-md-8 pull-left" })
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="box-footer">
                            <button id="comebackID" type="button" class="btn btn-danger pull-left" onclick="location.href = '@Url.Action("UpfList", "Department")'">Quay lại</button>
                            <button id="completeID" type="submit" class="btn btn-success pull-right" title="Hoàn tất" onclick="return validateForm();" name="submitButton" value="Success">Hoàn tất</button>
                            <button id="draftID" type="submit" class="btn btn-google pull-right" style="margin-right: 10px;" title="Lưu nháp" onclick="return validateForm();" name="submitButton" value="Draft">Lưu nháp</button>
                            <button id="notApproveID" type="submit" class="btn btn-danger pull-right" name="submitButton" value="Cancel">Từ chối</button>
                            <button id="approveID" type="submit" class="btn btn-success pull-right" style="margin-right: 10px;">Phê Duyệt</button>
                            <button id="saveID" type="submit" class="btn btn-success pull-right">Lưu</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
}
        @section Scripts {
            @Scripts.Render("~/BitexcoThemes/plugins/datatables/js")
            @Scripts.Render("~/Scripts/Tables/Data")
            @Scripts.Render("~/BitexcoThemes/plugins/datepicker/js")
            @Scripts.Render("~/Scripts/Department/list")
            @Scripts.Render("~/Scripts/Department/create")
        }
