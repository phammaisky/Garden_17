@using AMS.Models;
@using AMS.Helpers;
@model AMS.Models.Pagging<DeviceAndTool>

<div class="table-responsive">
    <table class="table table-striped table-bordered table-hover table-condensed">
        <tr>
            <th style="text-align:center; vertical-align:middle">
                @Html.DisplayColumnNameFor(Model.model, model => model.AssetsCode)
            </th>
            <th style="text-align:center; vertical-align:middle">
                @Html.DisplayColumnNameFor(Model.model, model => model.DeviceName)
            </th>
            <th style="text-align:center; vertical-align:middle">
                Loại thiết bị, công cụ
            </th>
            <th style="width:100px; text-align:center; vertical-align:middle">
                @Html.DisplayColumnNameFor(Model.model, model => model.BuyDate)
            </th>
            <th style="width:100px; text-align:center; vertical-align:middle">
                Quản lý
            </th>
            <th style="width:150px; text-align:center; vertical-align:middle">
                Người, Phòng ban sử dụng
            </th>
            <th style="width:100px; text-align:center; vertical-align:middle">
                Địa điểm
            </th>
            <th style="width:120px; text-align:center; vertical-align:middle">
                Ngày bàn giao, thanh lý
            </th>
            <th style="width:110px; text-align:center; vertical-align:middle">
                Tình trạng
            </th>
            <th style="width:90px; text-align:center"></th>
        </tr>

        @foreach (var item in (List<DeviceAndTool>)Model.model)
        {
            <tr @Html.Raw(item.HistoryUses.OrderByDescending(h => h.HandedDate).First().StatusId == 5 ? "style='background-color:#f2dede ; color:#a94442'" : "")>
                <td style="text-align:center">    
                    @Html.DisplayFor(modelItem => item.AssetsCode)              
                    @*<img alt="barcode" src="@Url.Action("GetbarCode", "DeviceAndTools", new { id = item.Id })">*@
                </td>
                <td>
                    <a class="create_modal" href='@Url.Action("Details", "DeviceAndTools", new { Id = item.Id }, null)'
                       data-toggle="tooltip" data-placement="top" title="Thông tin chi tiết">@Html.DisplayFor(modelItem => item.DeviceName)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceCategory.DeviceCatName)
                    @Html.DisplayFor(modelItem => item.ToolCategory.ToolCatName)
                </td>
                <td style="text-align:center">
                    @Html.DisplayFor(modelItem => item.BuyDate)
                </td>
                <td style="text-align:center">
                    @*@if (item.ToolCategory != null)
                    {
                        @Html.Raw("ADMIN");
                    }
                    else
                    {
                        if (item.DeviceCategory != null)
                        {
                            @Html.Raw(item.DeviceCategory.Type == DeviceCategory.TypeDevice.VP ? "ADMIN" : "IT")
                        }
                    }*@

                    @Html.Raw("The Garden");
                </td>
                @if (item.HistoryUses.Count > 0)
                {
                    var _historyUses = item.HistoryUses.OrderByDescending(h => h.HandedDate).First();
                    <td style="text-align:center">
                        @if (_historyUses.Staff != null)
                        {
                            @Html.Raw(_historyUses.Staff.FullName)
                        }
                        else
                        {
                            if (_historyUses.Department != null)
                            {
                                @Html.Raw(_historyUses.Department.DeptName)
                            }
                        }
                    </td>
                    <td style="text-align:center">
                        @Html.DisplayFor(modelItem => item.HistoryUses.OrderByDescending(h => h.HandedDate).First().Location.ShortName)
                    </td>
                    <td style="text-align:center">
                        @Html.DisplayFor(modelItem => item.HistoryUses.OrderByDescending(h => h.HandedDate).First().HandedDate)
                    </td>
                    <td style="text-align:center">
                        @Html.DisplayFor(modelItem => item.HistoryUses.OrderByDescending(h => h.HandedDate).First().StatusCategory.Name)
                    </td>
                }
                else
                {
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                }

                <td style="text-align:center">
                    <a class="create_modal" href='@Url.Action("Edit", "DeviceAndTools", new { Id = item.Id }, null)'
                       data-toggle="tooltip" data-placement="top" title="Sửa"><i class="fa fa-edit fa-lg"></i></a>
                    <a class="create_modal" style="color:red" href='@Url.Action("Delete", "DeviceAndTools", new { Id = item.Id }, null)'
                       data-toggle="tooltip" data-placement="top" title="Xóa"><i class="fa fa-trash-o fa-lg"></i></a>
                </td>
            </tr>
        }

    </table>
    <div class="pull-left" style="font-weight:bold">
        Tìm thấy @Model.totalItem bản ghi!
    </div>
    <div class="pull-right">
        @Html.Raw(Model.GenerateHtmlPaggerAjax())
    </div>
</div>

@Scripts.Render("~/bundles/modalform")

<script>
    $(document).ready(function () {
        $("#txbStaff").autocomplete({
            change: function (event, ui) {
                if ($("#txbStaff").val() == "")
                { $("#staffId").val(""); }
                formSubmit(1);
            },
            autoFocus: true,
            minLength: 3,
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("AutoCompleteStaff", "Staffs")",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response(data);
                    }
                })
            },
            select: function (event, ui) {
                $("#txbStaff").val(ui.item.FullName);
                $("#staffId").val(ui.item.Id);
                formSubmit();
                return false;
            }
        }).autocomplete("instance")._renderItem = function (ul, item) {
            ul.css("min-width", 300);
            return $("<li>")
              .append("<a>" + item.FullName + "</a><br />")
              .append("<font size='1pt'>" + item.DeptCode + "|" + item.NameVn + "</font>")
              .appendTo(ul);
        };

        $('#AssetsCode').focus();
    })

    function log(message) {
        $("<div>").text(message).prependTo("#log");
        $("#log").scrollTop(0);
    }

</script>

<script type="text/javascript">
    function EnterSubmit(elm) {
        $(elm).keydown(function (e) {
            if (e.keyCode == 13) {
                formSubmit(1);
                return false;
            }
        });
    }
    function formSubmit(pageParam) {
        var pageN = 1;
        pageN = $('#PageParam').val();
        if (pageParam != null) {
            pageN = pageParam;
        }
        var page = { page: pageN, maTS: $('#txbMaTS').val(), staffId: $('#staffId').val(), statusId: $("#StatusId option:selected").val(), toolCatId: $("#ToolCatId option:selected").val(), deviceCatId: $("#DeviceCatId option:selected").val(), companyId: $("#CompanySearchId").val(), deptId: $("#DeptSearchId").val(), locatioId: $("#LocationSearchId").val() };
        $('#progresBarLoadingData').show();
        $.post("@Url.Content("~/DeviceAndTools/Index")", page).done(function (d) {
            $('#grid-list').html(d);
            $('#progresBarLoadingData').hide();
        }).fail(function () {
            $('#progresBarLoadingData').html("<p class='text-danger'>Lỗi truy vấn dữ liệu</p>");
        });
    }


    function PustValueSelected() {
        var checkSelected = new Array();
        $(".checkSelected:checked").each(function () { checkSelected.push($(this).val()); });


        $('#CRUDDialogContent').html(AlertDialog());
        $('#CRUDDialog').modal({
            backdrop: 'static',
            keyboard: true
        }, 'show');

        $('#CRUDDialogContent').load('/DeviceAndTools/CreateHistory', $.param({ data: checkSelected }, true), function (response, status, xhr) {
            if (status == "error") {
                $("#CRUDDialogContent").html(AlertErrorDialog());
            }
            else {
                bindForm(this);
            }
        });
        return false;
    }

    function PrinterBarcode(pageParam) {
        var pageN = 1;
        pageN = $('#PageParam').val();
        if (pageParam != null) {
            pageN = pageParam;
        }
        var page = { page: pageN, maTS: $('#txbMaTS').val(), staffId: $('#staffId').val(), statusId: $("#StatusId option:selected").val(), toolCatId: $("#ToolCatId option:selected").val(), deviceCatId: $("#DeviceCatId option:selected").val(), companyId: $("#CompanySearchId").val(), deptId: $("#DeptSearchId").val(), locatioId: $("#LocationSearchId").val() };

        $('#CRUDDialogContent').html(AlertDialog());

        $('#CRUDDialog').modal({
            backdrop: 'static',
            keyboard: true
        }, 'show');

        $.post("@Url.Content("~/DeviceAndTools/PrinterBarcode")", page).done(function (d) {
            $('#CRUDDialogContent').html(d);
        }).fail(function (d) {
            $("#CRUDDialogContent").html(AlertErrorDialog());
        });
    }

    function ExportBarcode(pageParam) {
        var pageN = 1;
        pageN = $('#PageParam').val();
        if (pageParam != null) {
            pageN = pageParam;
        }
        var page = { page: pageN, maTS: $('#txbMaTS').val(), staffId: $('#staffId').val(), statusId: $("#StatusId option:selected").val(), toolCatId: $("#ToolCatId option:selected").val(), deviceCatId: $("#DeviceCatId option:selected").val(), companyId: $("#CompanySearchId").val(), deptId: $("#DeptSearchId").val(), locatioId: $("#LocationSearchId").val() };

        $.download("@Url.Content("~/DeviceAndTools/ExportBarcode")", page, "ExportBarcode");

        @*$.post("@Url.Content("~/DeviceAndTools/ExportBarcode")", page).done(function (d) {
            $('#CRUDDialogContent').html(d);
        });*@
    }
    function ExportBarcodeAll(pageParam) {
        var pageN = 1;
        pageN = $('#PageParam').val();
        if (pageParam != null) {
            pageN = pageParam;
        }
        var page = { page: pageN, maTS: $('#txbMaTS').val(), staffId: $('#staffId').val(), statusId: $("#StatusId option:selected").val(), toolCatId: $("#ToolCatId option:selected").val(), deviceCatId: $("#DeviceCatId option:selected").val(), companyId: $("#CompanySearchId").val(), deptId: $("#DeptSearchId").val(), locatioId: $("#LocationSearchId").val() };

        $.download("@Url.Content("~/DeviceAndTools/ExportBarcodeAll")", page, "ExportBarcodeAll");
    }

</script>
