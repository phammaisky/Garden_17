@using AMS.Models
@model AMS.Models.DeviceToolAndHistory

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" onclick="$('#CRUDSubDialog').modal('hide');"><span aria-hidden="true">&times;</span><span class="sr-only">Đóng</span></button>
            <h4 class="modal-title" id="myModalLabel">
                Bàn giao<small>
                    Tài sản mới
                </small>
            </h4>
        </div>

        @using (Html.BeginForm("CreateToStaff", "DeviceAndTools", FormMethod.Post, new { id = "CreateDialog" }))
        {
            @Html.AntiForgeryToken()
            <div class="modal-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label class="control-label col-sm-3">Tài sản </label>
                        <div class="radio col-sm-9" style="padding-top:0px">
                            <label class="radio-inline"><input type="radio" name="rdiAddOrExits" onchange="SiwchToAddDevice('addExits')" /> Đã có trong dữ liệu </label>
                            <label class="radio-inline"><input type="radio" checked="checked" name="rdiAddOrExits" />  Thêm mới  </label>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.BuyDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.BuyDate, new { htmlAttributes = new { @class = "form-control input-sm datemarsk" } })
                            @Html.ValidationMessageFor(model => model.BuyDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DeviceCatId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <div class="input-group">
                                <span class="input-group-addon">
                                    <label style="margin-bottom:0px; font-weight:normal;">
                                        <input type="radio" name="optToolDevice" value="vp" onchange="EnableDisableDropdown(this)" @Html.Raw(ViewBag.Type == "vp" ? "checked" : "") /> VP
                                    </label>
                                </span>
                                @if (ViewBag.Type == "vp")
                                {
                                    @Html.DropDownList("DeviceVPId", null, htmlAttributes: new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.DropDownList("DeviceVPId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                }

                                <span class="input-group-addon">
                                    <label style="margin-bottom:0px; font-weight:normal;">
                                        <input type="radio" name="optToolDevice" value="it" onchange="EnableDisableDropdown(this)" @Html.Raw(ViewBag.Type == "it" ? "checked" : "") /> IT
                                    </label>
                                </span>
                                @if (ViewBag.Type == "it")
                                {
                                    @Html.DropDownList("DeviceITId", null, htmlAttributes: new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.DropDownList("DeviceITId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                }

                            </div>
                            @Html.ValidationMessageFor(model => model.DeviceCatId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ToolCatId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <div class="input-group">
                                <span class="input-group-addon">
                                    <label style="margin-bottom:0px; font-weight:normal;">
                                        <input type="radio" name="optToolDevice" value="cc" onchange="EnableDisableDropdown(this)" @Html.Raw(ViewBag.Type == "cc" ? "checked" : "") /> Công cụ
                                    </label>
                                </span>
                                @if (ViewBag.Type == "cc")
                                {
                                    @Html.DropDownList("ToolCatId", null, htmlAttributes: new { @class = "form-control", @style = "max-width:180px" })
                                }
                                else
                                {
                                    @Html.DropDownList("ToolCatId", null, htmlAttributes: new { @class = "form-control", @style = "max-width:180px", @disabled = "disabled" })
                                }

                            </div>
                            @Html.ValidationMessageFor(model => model.ToolCatId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AssetsCode, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <div class="input-group">
                                <span class="input-group-addon">
                                    @Html.EditorFor(model => model.AutoAssetsCode)
                                </span>
                                @Html.EditorFor(model => model.AssetsCode, new { htmlAttributes = new { @class = "form-control input-sm", @style = "max-width:242px;" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.AssetsCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DeviceName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.DeviceName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.DeviceName, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.DescriptionDevice, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.DescriptionDevice, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.DescriptionDevice, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <input type="hidden" name="StaffId" value="@Model.StaffId" id="StaffId">
                    <div class="form-group">
                        @Html.LabelFor(model => model.HandedDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.HandedDate, new { htmlAttributes = new { @class = "form-control input-sm datemarsk" } })
                            @Html.ValidationMessageFor(model => model.HandedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.StatusDescription, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.StatusDescription, new { htmlAttributes = new { @class = "form-control input-sm " } })
                            @Html.ValidationMessageFor(model => model.StatusDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="submit" data-loading-text="Xin chờ..." class="btn btn-default submit">
                    <span class="glyphicon glyphicon-floppy-disk"></span> Lưu
                </button>
                <button type="button" onclick="$('#CRUDSubDialog').modal('hide');" class="btn btn-default" aria-hidden="true"><span class="glyphicon glyphicon-arrow-left"></span> Hủy</button>
            </div>
        }
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#AutoAssetsCode').change(function () {

            var notEnough = $(this).prop('checked');

            if (notEnough == false) {
                $('#AssetsCode').removeAttr("readonly");
                $('#AssetsCode').focus();
            }
            else
                $('#AssetsCode').attr("readonly", "readonly");
        })

        $('.number-float').inputmask("decimal", {
            radixPoint: ".",
            groupSeparator: ",",
            digits: 2,
            autoGroup: true
        });
        $('.datemarsk').inputmask({ alias: 'dd/mm/yyyy' });
        $('.datemarsk').datepicker({
            language: 'vi',
            autoclose: true,
            todayHighlight: true
        }).on('show', function (e) {
            $('.datepicker').click(function () { return false; });
        });
    })


    $('#staffModal').on('shown.bs.modal', function (event) {
        var modal = $(this)
        modal.find('#StaffSearchName').focus()
    })


    function EnableDisableDropdown(elm) {
        if ($(elm).val() == 'vp') {
            $('#DeviceVPId').removeAttr("disabled");
            $('#DeviceITId').attr("disabled", "disabled");
            $('#ToolCatId').attr("disabled", "disabled");
        }
        if ($(elm).val() == 'it') {
            $('#DeviceVPId').attr("disabled", "disabled");
            $('#DeviceITId').removeAttr("disabled");
            $('#ToolCatId').attr("disabled", "disabled");
        }
        if ($(elm).val() == 'cc') {
            $('#DeviceVPId').attr("disabled", "disabled");
            $('#DeviceITId').attr("disabled", "disabled");
            $('#ToolCatId').removeAttr("disabled");
        }
    }
</script>

<div class="modal fade" id="staffModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="$('#staffModal').modal('hide');"><span aria-hidden="true">&times;</span><span class="sr-only">Đóng</span></button>
                <h4 class="modal-title" id="myModalLabel">Tìm kiếm người dùng</h4>
            </div>
            <div class="modal-body" style="max-height:400px;">
                <table class="table table-striped table-bordered table-hover table-condensed" style="margin-bottom:0px">
                    <tr>
                        <td>
                            <div class="input-group input-group-sm" style="max-width:280px">
                                <input type="text" name="StaffSearchName" id="StaffSearchName" class="form-control" placeholder="Tên người dùng" style="width:250px">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" onclick="return false;" id="btnSearchStaff"><i class="fa fa-search fa-lg"></i> Tìm kiếm</button>
                                </span>
                            </div>
                        </td>
                    </tr>
                </table>
                <div id="resultStaffSearch" style="min-height:300px; max-height:300px; overflow:auto">
                    @{Html.RenderAction("GetListStaff", "Staffs");}
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="$('#staffModal').modal('hide');">Đóng</button>
            </div>
        </div>
    </div>
</div>


