@using AMS.Models
@model AMS.Models.DeviceToolAndHistory

<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" onclick="$('#CRUDDialog').modal('hide');"><span aria-hidden="true">&times;</span><span class="sr-only">Đóng</span></button>
            <h4 class="modal-title" id="myModalLabel">
                Thêm mới<small>
                    @if (ViewBag.ToolCatId != null)
                    {
                        @Html.Raw("Công cụ");
                    }
                    else
                    {
                        @Html.Raw("Thiết bị");
                    }
                </small>
            </h4>
        </div>

        @using (Html.BeginForm("Create", "DeviceAndTools", FormMethod.Post, new { id = "CreateDialog" }))
        {
            @Html.AntiForgeryToken()
            <div class="modal-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <fieldset>
                        <legend>Thông tin tài sản</legend>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.BuyDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.BuyDate, new { htmlAttributes = new { @class = "form-control input-sm datemarsk" } })
                                @Html.ValidationMessageFor(model => model.BuyDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (ViewBag.DeviceCatId != null)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.DeviceCatId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownList("DeviceCatId", null, htmlAttributes: new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.DeviceCatId, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.AssetsCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    <div class="input-group">
                                        <span class="input-group-addon">
                                            @*<label style="margin:0px; font-weight:normal"><input name="AutoAssetsCode" id="autoCode" type="checkbox" value="autoCode" checked> Tự động</label>*@
                                            @Html.EditorFor(model => model.AutoAssetsCode)
                                        </span>
                                        @Html.EditorFor(model => model.AssetsCode, new { htmlAttributes = new { @class = "form-control input-sm", @style = "max-width:185px;" } })

                                    </div>
                                    @Html.ValidationMessageFor(model => model.AssetsCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        @if (ViewBag.ToolCatId != null)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.ToolCatId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownList("ToolCatId", null, htmlAttributes: new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.ToolCatId, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.AssetsCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    <div class="input-group">
                                        <span class="input-group-addon">
                                            @*<label style="margin:0px; font-weight:normal"><input name="AutoAssetsCode" id="autoCode" type="checkbox" value="autoCode" checked> Tự động</label>*@
                                            @Html.EditorFor(model => model.AutoAssetsCode)
                                        </span>
                                        @Html.EditorFor(model => model.AssetsCode, new { htmlAttributes = new { @class = "form-control input-sm", @style = "max-width:185px;" } })

                                    </div>
                                    @Html.ValidationMessageFor(model => model.AssetsCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeviceName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.DeviceName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(model => model.DeviceName, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.DescriptionDevice, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.DescriptionDevice, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                @Html.ValidationMessageFor(model => model.DescriptionDevice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>


                    <fieldset>
                        <legend>Bàn giao tài sản</legend>
                        <div class="form-group">
                            @Html.LabelFor(model => model.StaffId, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-md-4">
                                <div class="input-group input-group-sm" style="padding:0px; max-width:280px">
                                    <input type="hidden" name="StaffId" id="StaffId">
                                    <input type="text" name="Staff" id="Staff" data-val="true" class="form-control" readonly>
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="button" ><i class="fa fa-close"></i></button>
                                        <button class="btn btn-default" type="button" data-toggle="modal" data-target="#staffModal"><i class="fa fa-search"></i></button>
                                    </span>
                                </div>
                                @Html.ValidationMessage("StaffId")
                            </div>
                            @Html.LabelFor(model => model.DeptId, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                <div class="btn-group" id="GroupDropdownDept">
                                    <button type="button" id="btnDropdownDept" style="width:280px; text-align:left; white-space:normal !important" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                        @if (ViewBag.Departement != null)
                                        {
                                        @Html.Raw(((Department)ViewBag.Departement).Company.NameVn + " | " + ((Department)ViewBag.Departement).DeptCode)<i class="fa fa-caret-down pull-right" style="padding-top: 3px;"></i>
                                        }
                                        else
                                        {
                                        <i class="fa fa-caret-down pull-right" style="padding-top: 3px;"></i>
                                        }
                                    </button>                                   
                                    <input type="hidden" name="DeptId" id="ParentId" />
                                    <div class="dropdown-menu" role="menu" style="max-height:250px; overflow:auto; padding-left:5px; padding-right:5px; width:400px">
                                        @{Html.RenderAction("DepartementSelector", "Companies");}
                                    </div>
                                    <script type="text/javascript">
                                        $('.dropdown-menu input, .dropdown-menu table, .dropdown-menu i').click(function (e) {
                                            e.stopPropagation();
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                <div class="btn-group" id="GroupDropdownLocation">
                                    <button type="button" id="btnDropdownLocation" style="width:280px; text-align:left" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                        &nbsp;<i class="fa fa-caret-down pull-right" style="padding-top: 3px;"></i>
                                    </button>
                                    <input type="hidden" name="LocationId" id="LocationId" />
                                    <div class="dropdown-menu" role="menu" style="max-height:250px; overflow:auto; padding-left:5px; padding-right:5px; width:400px">
                                        @{Html.RenderAction("LocationSelector", "Locations");}
                                    </div>
                                    <script type="text/javascript">
                                        $('.dropdown-menu input, .dropdown-menu table, .dropdown-menu i').click(function (e) {
                                            e.stopPropagation();
                                        });
                                    </script>
                                </div>
                            </div>
                            @Html.LabelFor(model => model.HandedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.HandedDate, new { htmlAttributes = new { @class = "form-control input-sm datemarsk" } })
                                @Html.ValidationMessageFor(model => model.HandedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.StatusDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.StatusDescription, new { htmlAttributes = new { @class = "form-control input-sm " } })
                                @Html.ValidationMessageFor(model => model.StatusDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>


                </div>
            </div>

            <div class="modal-footer">
                <button type="submit" data-loading-text="Xin chờ..." class="btn btn-default submit">
                    <span class="glyphicon glyphicon-floppy-disk"></span> Lưu
                </button>
                <button type="button" onclick="$('#CRUDDialog').modal('hide');" class="btn btn-default" aria-hidden="true"><span class="glyphicon glyphicon-arrow-left"></span> Hủy</button>
            </div>
        }
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#AutoAssetsCode').change(function () {

            var notEnough = $(this).prop('checked');

            if (notEnough == false) {
                $('#AssetsCode').removeAttr("readonly");
                $('#AssetsCode').focus();
            }
            else
                $('#AssetsCode').attr("readonly", "readonly");
        })

        $('.number-float').inputmask("decimal", {
            radixPoint: ".",
            groupSeparator: ",",
            digits: 2,
            autoGroup: true
        });
        $('.datemarsk').inputmask({ alias: 'dd/mm/yyyy' });
        $('.datemarsk').datepicker({
            language: 'vi',
            autoclose: true,
            todayHighlight: true
        }).on('show', function (e) {
            $('.datepicker').click(function () { return false; });
        });
    })


    $('#staffModal').on('shown.bs.modal', function (event) {

        var modal = $(this)
        modal.find('#StaffSearchName').focus()
    })
</script>

<div class="modal fade" id="staffModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="$('#staffModal').modal('hide');"><span aria-hidden="true">&times;</span><span class="sr-only">Đóng</span></button>
                <h4 class="modal-title" id="myModalLabel">Tìm kiếm người dùng</h4>
            </div>
            <div class="modal-body" style="max-height:400px;">
                <table class="table table-striped table-bordered table-hover table-condensed" style="margin-bottom:0px">
                    <tr>
                        <td>
                            <div class="input-group input-group-sm" style="max-width:280px">
                                <input type="text" name="StaffSearchName" id="StaffSearchName" class="form-control" placeholder="Tên người dùng" style="width:250px">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" onclick="return false;" id="btnSearchStaff"><i class="fa fa-search fa-lg"></i> Tìm kiếm</button>
                                </span>
                            </div>
                        </td>
                    </tr>
                </table>
                <div id="resultStaffSearch" style="min-height:300px; max-height:300px; overflow:auto">
                    @{Html.RenderAction("GetListStaff", "Staffs");}
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="$('#staffModal').modal('hide');">Đóng</button>
            </div>
        </div>
    </div>
</div>


